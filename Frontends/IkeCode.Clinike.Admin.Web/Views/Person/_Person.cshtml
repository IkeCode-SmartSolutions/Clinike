@model PersonViewModel

<div class="box">
    @Html.Partial("Forms/_BoxHeader", new BoxHeaderViewModel("Cadastro de Pessoa", "fa fa-user"))
    <div class="box-content">
        <h4 class="page-header">Pessoa</h4>
        @using (Html.BeginForm("Post", "Person",
                                FormMethod.Post,
                                new { enctype = "multipart/form-data", id = "_personForm", role = "form", @class = "form-horizontal" }))
        {
            @Html.AntiForgeryToken();

            @Html.HiddenFor(m => m.Person.Id)
            @Html.HiddenFor(m => m.Person.DateIns)
            @Html.HiddenFor(m => m.Person.LastUpdate)

            <div class="form-group">
                @Html.LabelFor(m => m.Person.Name, new { @class = "col-sm-2 control-label" })
                <div class="col-sm-4">
                    @Html.TextBoxFor(m => m.Person.Name, new { placeholder = "Fulano da Silva", @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Person.Name)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Person.Email, new { @class = "col-sm-2 control-label" })
                <div class="col-sm-3">
                    <div class="input-group">
                        <div class="input-group-addon">@@</div>
                        @Html.TextBoxFor(m => m.Person.Email, new { placeholder = "email@provedor.com", @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Person.Email)
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.ProfileImage, new { @class = "col-sm-2 control-label" })
                @Html.HiddenFor(m => m.Person.ProfileImageUrl)
                <div class="col-sm-5">
                    @if (!string.IsNullOrWhiteSpace(Model.Person.ProfileImageUrl))
                    {
                        <img src="@Model.Person.ProfileImageUrl"
                             class="img-circle"
                             alt="120x120" style="width: 120px; height: 120px;">
                        <br/>
                    }
                    @Html.TextBoxFor(m => m.ProfileImage, new { type = "file", accept = "image/*", title = "Selecione uma foto para o perfil", @class = "btn-success" })
                    @Html.ValidationMessageFor(m => m.ProfileImage)
                </div>
            </div>

            <div class="form-group">
                <div class="col-sm-offset-8 col-sm-4">
                    <button type="reset" class="btn btn-default btn-label-left">
                        Limpar
                    </button>

                    @if (Model.Person.Id > 0)
                    {
                        <button type="button" class="btn btn-danger btn-label-left">
                            <span class="glyphicon glyphicon-trash" aria-hidden="true"></span>
                            Excluir
                        </button>
                    }

                    <button type="submit" class="btn btn-primary btn-label-left">
                        <span class="glyphicon glyphicon-ok" aria-hidden="true"></span>
                        Salvar
                    </button>
                </div>
            </div>
        }
    </div>
</div>